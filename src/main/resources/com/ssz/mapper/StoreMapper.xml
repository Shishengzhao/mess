<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssz.mess.mapper.StoreMapper">
  <resultMap id="BaseResultMap" type="com.ssz.mess.pojo.Store">

    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="floor" jdbcType="INTEGER" property="floor" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="grade_id" jdbcType="INTEGER" property="gradeId" />
  </resultMap>

<!--&lt;!&ndash;  定义封装grade,menu,comment的resultMap&ndash;&gt;-->
<!--  <resultMap id="storeWithOthersMap" type="StoreVo">-->
<!--    <id property="id" column="id"></id>-->
<!--    <result property="password" column="password"></result>-->
<!--    <result property="storeId" column="store_id"></result>-->
<!--    <result property="name" column="name"></result>-->
<!--    <result property="floor" column="floor"></result>-->
<!--    <result property="phone" column="phone"></result>-->
<!--    <result property="role" column="role"></result>-->

<!--&lt;!&ndash;    店家和评分的一对一映射&ndash;&gt;-->
<!--    <association property="grade" column="grade_id" javaType="Grade">-->
<!--      <id property="id" column="id"></id>-->
<!--      <result property="totalpoints" column="totalpoints"></result>-->
<!--      <result property="time" column="time"></result>-->
<!--    </association>-->

<!--    &lt;!&ndash;店家和菜单的一对多映射&ndash;&gt;-->
<!--    <collection property="menus" ofType="Menu">-->
<!--      <id property="id" column="id"></id>-->
<!--      <result property="menuId" column="menu_id"></result>-->
<!--      <result property="name" column="name"></result>-->
<!--      <result property="price" column="price"></result>-->
<!--      <result property="storeId" column="store_id"></result>-->
<!--    </collection>-->

<!--&lt;!&ndash;    店家和评论的一对多映射&ndash;&gt;-->
<!--    <collection property="comments" ofType="Comment">-->
<!--      <id property="id" column="id"></id>-->
<!--      <result property="name" column="name"></result>-->
<!--      <result property="content" column="content"></result>-->
<!--      <result property="storeId" column="store_id"></result>-->
<!--    </collection>-->
<!--  </resultMap>-->






  <sql id="Example_Where_Clause">

    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">

    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">

    id, password, store_id, name, floor, phone, role, grade_id
  </sql>

  <!--根据id查询-->
  <select id="getStoreById" resultMap="BaseResultMap" parameterType="integer">
    select * from store where id = #{id}
  </select>

  <!--根据店号查询-->
  <select id="getStoreByStoreId" resultMap="BaseResultMap" parameterType="integer">
    select * from store where store_id = #{id}
  </select>

<!-- &lt;!&ndash; 关联其他表查询&ndash;&gt;-->
<!--  <select id="getStoreWithOthers" resultMap="storeWithOthersMap">-->
<!--    select * from store s-->
<!--    left join grade g on s.store_id = g.id-->
<!--    left outer join menu m on s.id = m.store_id-->
<!--    left outer join comment c on s.id = c.store_id-->
<!--    where s.id = #{id}-->
<!--&#45;&#45;     select * from store s-->
<!--&#45;&#45;     left outer join menu m on s.id = m.store_id-->
<!--&#45;&#45;     where s.id = #{id}-->
<!--  </select>-->

  <select id="selectByExample" parameterType="com.ssz.mess.pojo.StoreExample" resultMap="BaseResultMap">

    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">

    select 
    <include refid="Base_Column_List" />
    from store
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">

    delete from store
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssz.mess.pojo.StoreExample">

    delete from store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssz.mess.pojo.Store">

    insert into store (id, password, store_id, 
      name, floor, phone, 
      role, grade_id)
    values (#{id,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{storeId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{floor,jdbcType=INTEGER}, #{phone,jdbcType=INTEGER}, 
      #{role,jdbcType=INTEGER}, #{gradeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ssz.mess.pojo.Store">

    insert into store
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="floor != null">
        floor,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssz.mess.pojo.StoreExample" resultType="java.lang.Long">

    select count(*) from store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">

    update store
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.floor != null">
        floor = #{record.floor,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=INTEGER},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=INTEGER},
      </if>
      <if test="record.gradeId != null">
        grade_id = #{record.gradeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">

    update store
    set id = #{record.id,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      floor = #{record.floor,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=INTEGER},
      role = #{record.role,jdbcType=INTEGER},
      grade_id = #{record.gradeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssz.mess.pojo.Store">

    update store
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        floor = #{floor,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssz.mess.pojo.Store">

    update store
    set password = #{password,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      floor = #{floor,jdbcType=INTEGER},
      phone = #{phone,jdbcType=INTEGER},
      role = #{role,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>